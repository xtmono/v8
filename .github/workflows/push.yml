name: build and publish v8 libs
on: [push]

env:
  V8_VERSION: "13.1"

defaults:
  run:
    shell: bash

jobs:

  build-linux-x64:
#    if: ${{ false }}  # disable
    name: linux
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: false
      matrix:
        platform: [x64]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: setup v8 build tools
        run: |
          git clone https://chromium.googlesource.com/chromium/tools/depot_tools.git
          export PATH="$GITHUB_WORKSPACE/depot_tools:${PATH}"
          gclient
          fetch v8
      - name: fetch beta branch
        run: |
          export PATH="$GITHUB_WORKSPACE/depot_tools:${PATH}"
          cd $GITHUB_WORKSPACE/v8
          git checkout branch-heads/$V8_VERSION
          gclient sync
          mkdir -p out.gn/${{ matrix.platform }}.release/
      - name: Compress headers
        run: |
          tar -zcvf include.tar.gz v8/include
      - name: Upload headers
        uses: actions/upload-artifact@v4
        with:
          path: ${{ github.workspace }}/include.tar.gz
          name: include.tar.gz
      - name: Compress source
        run: |
          tar -zcvf src.tar.gz v8/src
      - name: Upload source
        uses: actions/upload-artifact@v4
        with:
          path: ${{ github.workspace }}/src.tar.gz
          name: src.tar.gz

      - name: Restore CCache
        uses: actions/cache@v4
        with:
          path: .ccache
          key: ${{ runner.os }}-${{ matrix.platform }}:libv8:ccache:${{ github.run_number }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.platform }}:libv8:ccache:
      - name: Setup Build Tools
        shell: bash
        run: |
          sudo apt-get update
          sudo apt-get install -yq ccache
          sudo update-ccache-symlinks

          echo "/usr/lib/ccache" >> "$GITHUB_PATH"

          ccacheDir="${GITHUB_WORKSPACE}/.ccache"
          test -d "$ccacheDir" || mkdir "$ccacheDir"

          echo "CCACHE_DIR=$ccacheDir" >> "$GITHUB_ENV"
      - name: Restore V8 Cache
        uses: actions/cache@v4
        with:
          path: |
            v8
            .gclient_entries
            .gclient_previous_sync_commits
            .cipd
          key: ${{ runner.os }}-${{ matrix.platform }}:libv8:v8:${{ hashFiles('**/VERSION') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.platform }}:libv8:v8:

      - name: build v8 static library
        run: |
          export PATH="$GITHUB_WORKSPACE/depot_tools:${PATH}"
          cp args.linux.${{ matrix.platform }}.gn $GITHUB_WORKSPACE/v8/out.gn/${{ matrix.platform }}.release/args.gn
          cd $GITHUB_WORKSPACE/v8
          gn gen out.gn/${{ matrix.platform }}.release
          ninja -j 4 v8_monolith -C out.gn/${{ matrix.platform }}.release/
          gn args --list out.gn/${{ matrix.platform }}.release
      - name: Compress static library
        run: |
          gzip -9 -c ${{ github.workspace }}/v8/out.gn/${{ matrix.platform }}.release/obj/libv8_monolith.a > libv8_monolith-linux-${{ matrix.platform }}.a.gz
      - name: Upload static library
        uses: actions/upload-artifact@v4
        with:
          path: libv8_monolith-linux-${{ matrix.platform }}.a.gz
          name: libv8_monolith-linux-${{ matrix.platform }}.a.gz
      - name: Compress generated source
        run: |
          tar -zcvf gen-linux-${{ matrix.platform }}.tar.gz v8/out.gn/${{ matrix.platform }}.release/gen
      - name: Upload generated source
        uses: actions/upload-artifact@v4
        with:
          path: ${{ github.workspace }}/gen-linux-${{ matrix.platform }}.tar.gz
          name: gen-linux-${{ matrix.platform }}.tar.gz

  build-linux-arm64:
#    if: ${{ false }}  # disable
    name: linux
    runs-on: ubuntu-22.04-arm
    strategy:
      fail-fast: false
      matrix:
        platform: [arm64]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: setup v8 build tools
        run: |
          git clone https://chromium.googlesource.com/chromium/tools/depot_tools.git
          export PATH="$GITHUB_WORKSPACE/depot_tools:${PATH}"
          gclient
          fetch v8
      - name: fetch beta branch
        run: |
          export PATH="$GITHUB_WORKSPACE/depot_tools:${PATH}"
          cd $GITHUB_WORKSPACE/v8
          git checkout branch-heads/$V8_VERSION
          gclient sync
          mkdir -p out.gn/${{ matrix.platform }}.release/
      - name: Restore CCache
        uses: actions/cache@v4
        with:
          path: .ccache
          key: ${{ runner.os }}-${{ matrix.platform }}:libv8:ccache:${{ github.run_number }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.platform }}:libv8:ccache:
      - name: Setup Build Tools
        shell: bash
        run: |
          sudo apt-get update
          sudo apt-get install -yq ccache
          sudo update-ccache-symlinks

          echo "/usr/lib/ccache" >> "$GITHUB_PATH"

          ccacheDir="${GITHUB_WORKSPACE}/.ccache"
          test -d "$ccacheDir" || mkdir "$ccacheDir"

          echo "CCACHE_DIR=$ccacheDir" >> "$GITHUB_ENV"
      - name: Restore V8 Cache
        uses: actions/cache@v4
        with:
          path: |
            v8
            .gclient_entries
            .gclient_previous_sync_commits
            .cipd
          key: ${{ runner.os }}-${{ matrix.platform }}:libv8:v8:${{ hashFiles('**/VERSION') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.platform }}:libv8:v8:
      - name: build v8 static library
        run: |
          export PATH="$GITHUB_WORKSPACE/depot_tools:${PATH}"
          cp args.linux.${{ matrix.platform }}.gn $GITHUB_WORKSPACE/v8/out.gn/${{ matrix.platform }}.release/args.gn
          cd $GITHUB_WORKSPACE/v8
          gn gen out.gn/${{ matrix.platform }}.release
          ninja -j 4 v8_monolith -C out.gn/${{ matrix.platform }}.release/
          gn args --list out.gn/${{ matrix.platform }}.release
      - name: Compress static library
        run: |
          gzip -9 -c ${{ github.workspace }}/v8/out.gn/${{ matrix.platform }}.release/obj/libv8_monolith.a > libv8_monolith-linux-${{ matrix.platform }}.a.gz
      - name: Upload static library
        uses: actions/upload-artifact@v4
        with:
          path: libv8_monolith-linux-${{ matrix.platform }}.a.gz
          name: libv8_monolith-linux-${{ matrix.platform }}.a.gz
      - name: Compress generated source
        run: |
          tar -zcvf gen-linux-${{ matrix.platform }}.tar.gz v8/out.gn/${{ matrix.platform }}.release/gen
      - name: Upload generated source
        uses: actions/upload-artifact@v4
        with:
          path: ${{ github.workspace }}/gen-linux-${{ matrix.platform }}.tar.gz
          name: gen-linux-${{ matrix.platform }}.tar.gz

  build-mac-x64:
#    if: ${{ false }}  # disable
    name: mac
    runs-on: macos-13
    strategy:
      fail-fast: false
      matrix:
        platform: [x64]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: setup v8 build tools
        run: |
          git clone https://chromium.googlesource.com/chromium/tools/depot_tools.git
          export PATH="$GITHUB_WORKSPACE/depot_tools:${PATH}"
          gclient
          fetch v8
      - name: fetch beta branch
        run: |
          export PATH="$GITHUB_WORKSPACE/depot_tools:${PATH}"
          cd $GITHUB_WORKSPACE/v8
          git checkout branch-heads/$V8_VERSION
          gclient sync
          mkdir -p out.gn/${{ matrix.platform }}.release/
      - name: Restore CCache
        uses: actions/cache@v4
        with:
          path: .ccache
          key: ${{ runner.os }}-${{ matrix.platform }}:libv8:ccache:${{ github.run_number }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.platform }}:libv8:ccache:
      - name: Setup Build Tools
        shell: bash
        run: |
          brew install ccache

          echo "$(brew --prefix ccache)/libexec" >> "$GITHUB_PATH"
          echo "CCACHE_CPP2=yes" >> "$GITHUB_ENV"
          echo "CCACHE_SLOPPINESS=time_macros" >> "$GITHUB_ENV"

          ccacheDir="${GITHUB_WORKSPACE}/.ccache"
          test -d "$ccacheDir" || mkdir "$ccacheDir"

          echo "CCACHE_DIR=$ccacheDir" >> "$GITHUB_ENV"
      - name: Restore V8 Cache
        uses: actions/cache@v4
        with:
          path: |
            v8
            .gclient_entries
            .gclient_previous_sync_commits
            .cipd
          key: ${{ runner.os }}-${{ matrix.platform }}:libv8:v8:${{ hashFiles('**/VERSION') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.platform }}:libv8:v8:
      - name: build v8 static library
        run: |
          export PATH="$GITHUB_WORKSPACE/depot_tools:${PATH}"
          cp args.mac.${{ matrix.platform }}.gn $GITHUB_WORKSPACE/v8/out.gn/${{ matrix.platform }}.release/args.gn
          cd $GITHUB_WORKSPACE/v8
          gn gen out.gn/${{ matrix.platform }}.release
          ninja -j 4  v8_monolith -C out.gn/${{ matrix.platform }}.release/
          gn args --list out.gn/${{ matrix.platform }}.release
      - name: Compress static library
        run: |
          gzip -9 -c ${{ github.workspace }}/v8/out.gn/${{ matrix.platform }}.release/obj/libv8_monolith.a > libv8_monolith-mac-${{ matrix.platform }}.a.gz
      - name: Upload static library
        uses: actions/upload-artifact@v4
        with:
          path: libv8_monolith-mac-${{ matrix.platform }}.a.gz
          name: libv8_monolith-mac-${{ matrix.platform }}.a.gz
      - name: Compress generated source
        run: |
          tar -zcvf gen-mac-${{ matrix.platform }}.tar.gz v8/out.gn/${{ matrix.platform }}.release/gen
      - name: Upload generated source
        uses: actions/upload-artifact@v4
        with:
          path: ${{ github.workspace }}/gen-mac-${{ matrix.platform }}.tar.gz
          name: gen-mac-${{ matrix.platform }}.tar.gz

  build-mac-arm64:
 #   if: ${{ false }}  # disable
    name: mac
    runs-on: macos-14
    strategy:
      fail-fast: false
      matrix:
        platform: [arm64]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: setup v8 build tools
        run: |
          git clone https://chromium.googlesource.com/chromium/tools/depot_tools.git
          export PATH="$GITHUB_WORKSPACE/depot_tools:${PATH}"
          gclient
          fetch v8
      - name: fetch beta branch
        run: |
          export PATH="$GITHUB_WORKSPACE/depot_tools:${PATH}"
          cd $GITHUB_WORKSPACE/v8
          git checkout branch-heads/$V8_VERSION
          gclient sync
          mkdir -p out.gn/${{ matrix.platform }}.release/
      - name: Restore CCache
        uses: actions/cache@v4
        with:
          path: .ccache
          key: ${{ runner.os }}-${{ matrix.platform }}:libv8:ccache:${{ github.run_number }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.platform }}:libv8:ccache:
      - name: Setup Build Tools
        shell: bash
        run: |
          brew install ccache

          echo "$(brew --prefix ccache)/libexec" >> "$GITHUB_PATH"
          echo "CCACHE_CPP2=yes" >> "$GITHUB_ENV"
          echo "CCACHE_SLOPPINESS=time_macros" >> "$GITHUB_ENV"

          ccacheDir="${GITHUB_WORKSPACE}/.ccache"
          test -d "$ccacheDir" || mkdir "$ccacheDir"

          echo "CCACHE_DIR=$ccacheDir" >> "$GITHUB_ENV"
      - name: Restore V8 Cache
        uses: actions/cache@v4
        with:
          path: |
            v8
            .gclient_entries
            .gclient_previous_sync_commits
            .cipd
          key: ${{ runner.os }}-${{ matrix.platform }}:libv8:v8:${{ hashFiles('**/VERSION') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.platform }}:libv8:v8:
      - name: build v8 static library
        run: |
          export PATH="$GITHUB_WORKSPACE/depot_tools:${PATH}"
          cp args.mac.${{ matrix.platform }}.gn $GITHUB_WORKSPACE/v8/out.gn/${{ matrix.platform }}.release/args.gn
          cd $GITHUB_WORKSPACE/v8
          gn gen out.gn/${{ matrix.platform }}.release
          ninja -j 4  v8_monolith -C out.gn/${{ matrix.platform }}.release/
          gn args --list out.gn/${{ matrix.platform }}.release
      - name: Compress static library
        run: |
          gzip -9 -c ${{ github.workspace }}/v8/out.gn/${{ matrix.platform }}.release/obj/libv8_monolith.a > libv8_monolith-mac-${{ matrix.platform }}.a.gz
      - name: Upload static library
        uses: actions/upload-artifact@v4
        with:
          path: libv8_monolith-mac-${{ matrix.platform }}.a.gz
          name: libv8_monolith-mac-${{ matrix.platform }}.a.gz
      - name: Compress generated source
        run: |
          tar -zcvf gen-mac-${{ matrix.platform }}.tar.gz v8/out.gn/${{ matrix.platform }}.release/gen
      - name: Upload generated source
        uses: actions/upload-artifact@v4
        with:
          path: ${{ github.workspace }}/gen-mac-${{ matrix.platform }}.tar.gz
          name: gen-mac-${{ matrix.platform }}.tar.gz

  build-windows:
#    if: ${{ false }}  # disable
    name: windows
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        platform: [x64,arm64]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Setup python
        uses: actions/setup-python@v2
        with:
          python-version: 3.10
      - name: Install MSVC/MCBuild (Windows)
        uses: microsoft/setup-msbuild@v1.0.2
      - name: setup v8 build tools
        shell: pwsh
        run: |
          git clone https://chromium.googlesource.com/chromium/tools/depot_tools.git
          echo "$pwd/depot_tools" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
          echo "DEPOT_TOOLS_WIN_TOOLCHAIN=0" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
      - name: fetch v8 source
        run: |
          export DEPOT_TOOLS_WIN_TOOLCHAIN=0
          gclient
          fetch v8
          cd v8
          git checkout branch-heads/$V8_VERSION
          gclient sync

      - name: Restore CCache
        uses: actions/cache@v4
        with:
          path: .sccache
          key: ${{ runner.os }}-${{ matrix.platform }}:libv8:sccache:${{ github.run_number }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.platform }}:libv8:sccache:

      - name: Setup Scoop
        uses: MinoruSekine/setup-scoop@v4

      - name: Setup Build Tools
        shell: pwsh
        run: |
          scoop install sccache

          $sccacheDir = "$Env:GITHUB_WORKSPACE`\.sccache"
          New-Item -Path "$sccacheDir" -ItemType Directory -Force

          Write-Output "SCCACHE_DIR=$sccacheDir" | Out-File -FilePath "$Env:GITHUB_ENV" -Encoding utf8
          New-Item -ItemType directory -Path ./out.gn/${{ matrix.platform }}.release/

      - name: Restore V8 Cache
        uses: actions/cache@v4
        with:
          path: |
            v8
            .gclient_entries
            .gclient_previous_sync_commits
            .cipd
          key: ${{ runner.os }}-${{ matrix.platform }}:libv8:v8:${{ hashFiles('**/VERSION') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.platform }}:libv8:v8:
      - name: build v8 static library
        shell: pwsh
        run: |
          Set-Location -Path v8
          Copy-Item "../args.win.${{ matrix.platform }}.gn" -Destination "./out.gn/${{ matrix.platform }}.release/args.gn" -force          
          gn gen out.gn/${{ matrix.platform }}.release
          ninja -j 4  v8_monolith -C out.gn/${{ matrix.platform }}.release/
          gn args --list out.gn/${{ matrix.platform }}.release
      - name: Compress static library
        shell: pwsh
        run: |
          Compress-Archive -Path v8/out.gn/${{ matrix.platform }}.release/obj/v8_monolith.lib -Destination libv8_monolith-win-${{ matrix.platform }}.zip
      - name: Upload static library
        uses: actions/upload-artifact@v4
        with:
          path: libv8_monolith-win-${{ matrix.platform }}.zip
          name: libv8_monolith-win-${{ matrix.platform }}.zip
      - name: Compress generated source
        shell: pwsh
        run: |
          Compress-Archive -Path v8/out.gn/${{ matrix.platform }}.release/gen -Destination gen-win-${{ matrix.platform }}.zip
      - name: Upload generated source
        uses: actions/upload-artifact@v4
        with:
          path: ${{ github.workspace }}/gen-win-${{ matrix.platform }}.zip
          name: gen-win-${{ matrix.platform }}.zip
